<!--Sneaky HTML comment to persuade my text editor to highlight as HTML-->
{{define "content"}}
{{$SU := .SameUser}}
<head>
<script src=" https://cdn.jsdelivr.net/npm/macy@2.5.1/dist/macy.min.js "></script>
<title>{{.User.Username}}</title>
</head>
<body>
<div id="body">
	{{if $SU}}
	<div id="pfp-form-container" class="lbox" style="display: none;"> <!--I don't know if reusing lbox here is a good idea but I'm doing it anyway-->
		<form id="pfp-form" action="/update_avatar" method="post" enctype="multipart/form-data">
		    <input type="file" name="pfp" accept="image/*">
			<input type="submit">
		</form>
	</div>

	<dialog id="delete-dialog">
		<form method="dialog">
			<p>You will permanently delete this gallery and its images FOREVER!!!!!!!!!!!!!!</p>
			<div>
				<button value="cancel">Wait, keep it!</button>
				<button value="confirm">Burninate it!</button>
				<input id="delete-gallery-id" type="hidden" name="gallery-id" value=""/>
			</div>
		</form>
	</dialog>
	{{end}}

	<div id="user-info">
		<img width="256" height="256" src="{{.User.Avatar}}" id="pfp">
		<span class="bio" id="bio-text"     {{if $SU}}onclick="toggleBioModifier()"{{end}}>{{.User.Bio}}</span>
		{{if $SU}}
			<textarea class="bio" id="bio-modifier" onblur="updateBio()" style="display: none">{{.User.Bio}}</textarea>
			<p style="display: inline;">Welcome to your profile, {{.myUser.Displayname}}</p><br>
		{{end}}
		<strong>{{.User.Displayname}}</strong><br>
		@{{.User.Username}}
	</div>

	<div id="img-grid">
		<div id="macy-container"></div>
		<div id="lbox">
			<div id="closeModal" onclick="toggleModal(undefined)">X</div>
			{{if $SU}}<div id="deleteGallery">Delete this gallery?</div>{{end}}
			<div id="lightbox-content">
				<div id="photo-container">
					<img id="photo" src="" class="photo">
				</div>
				<div id="sidebar">
					<div id="navigation-controls">
						<div class="change-slide" onclick="changeSlide(-1)"><<</div>
						<div class="change-slide" onclick="changeSlide(1)">>></div>
					</div>
					<div class="infobox gal-info">
						<p id="gallery-description">
						</p>
						<p id="gallery-upload-stamp">
						</p>
						<table class="infobox" id="img-exif">
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
</body>
<style>
#body {
	margin-left: auto;
	margin-right: auto;
	max-width: 90rem;
}

.gallery-thumb {
	padding: 1px;
	display: inline-block;
	margin: 10px;
	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3), 0 8px 16px rgba(0, 0, 0, 0.2);
	overflow: hidden;
	transition: transform 0.3s ease, box-shadow 0.3s ease;
	max-width: 30%;
}
.gallery-thumb:hover {
	transform: translateY(-4px);
	box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4), 0 16px 32px rgba(0, 0, 0, 0.3);
}
.gallery-thumb img {
	width: auto;
	height: auto;
	max-width: 100%;
	max-height: 300px;
	display: block;
	object-fit: contain;
}

#lbox {
	position: fixed;
	z-index: 1;
	width: 100%;
	height: 100%;
	left: 0;
	top: 0;
	background-color: rgb(0, 0, 0, 0.8);
	display: flex;
	align-items: center;
	justify-content: center;
}

#lightbox-content {
	display: flex;
	width: 90%;
	height: 100vh;
	max-width: 1200px;
	background-color: white;
	border-radius: 8px;
	overflow: hidden;
	margin: auto;
}

#photo-container {
	flex: 1;
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: #f5f5f5;
	position: relative;
	height: 100vh;
}

#photo-container img {
	max-width: 100%;
	height: 100vh;
	object-fit: contain;
}

#sidebar {
	width: 300px;
	background-color: white;
	padding: 20px;
	overflow-y: auto;
	overflow-x: hidden;
	display: flex;
	flex-direction: column;
	gap: 15px;
	height: 100vh;
	word-wrap: break-word;
}

#navigation-controls {
	display: flex;
	gap: 10px;
	justify-content: center;
}

#pfp-form-container {
    background-color: white;
    height: 25px;
}

#closeModal {
	position: absolute;
	top: 10px;
	right: 10px;
	color: white;
	background-color: #4a4a4a;
	padding: 10px 15px;
	border-radius: 4px;
	cursor: pointer;
	z-index: 10;
}

#closeModal:hover {
	background-color: #2a2a2a;
}

#deleteGallery {
	position: absolute;
	bottom: 10px;
	right: 10px;
	color: white;
	background-color: #4a4a4a;
	padding: 10px 15px;
	border-radius: 4px;
	cursor: pointer;
	z-index: 10;
}

#deleteGallery:hover {
	background-color: #2a2a2a;
}

.change-slide {
	color: white;
	background-color: #4a4a4a;
	padding: 10px 15px;
	border-radius: 4px;
	cursor: pointer;
	text-align: center;
	flex: 1;
}

.change-slide:hover {
	background-color: #2a2a2a;
}

#img-grid {
	max-width: 90rem;
	margin: 0 auto 3rem;
	outline: auto;
}

#user-info {
	margin: 0 auto 3rem;
	width: 60rem;
}

#infobox {
	background-color: gray;
	display: inline-block;
	width: 300px;
}

tr:nth-child(even) {
	background-color: light-gray;
}

.bio {
    outline: dashed;
    width: 25%;
    display: inline-block;
    position: absolute;
    height: 40%;
    overflow-wrap: break-word;
    white-space: pre-wrap;
}

#bio-modifier {
    resize: none;
}
</style>
<script type="text/javascript" defer>
let gals = JSON.parse({{.jsonGals}});

let thumbsBox = document.getElementById("macy-container");
let lightbox = document.getElementById("lbox");
lightbox.style.display = "none";

function createThumbnail(gallery) {
	let el = document.createElement("img");
	el.src = gallery.Thumb;
	el.addEventListener("click", (e) => {
		toggleModal(gallery)
	})
	el.classList.add("gallery-thumb");
	thumbsBox.appendChild(el);
}

for (let g of gals) {
	createThumbnail(g)
}

{{if $SU}} //for extra protections, dont include these in the templates for strangers (since this is all client side a user could add these back anyway, so its important to have server-side protections)
    //https://stackoverflow.com/a/54964425/12514997
    function formSubmit(sourceForm, endpoint) {
        var url = "";
        if (endpoint == "avatar") {
            url = "/update_avatar";
        } else if (endpoint == "bio") {
            url = "/update_bio";
        } else if (endpoint == "deleteGal") {
			url = "/delete_gal";
        }
        var request = new XMLHttpRequest();
        request.open('POST', url, true);
        request.onreadystatechange = function() {
            if (request.readyState == 4) {
                if (request.status >= 200 && request.status <= 201) {
                    if (endpoint=="avatar") {pfp.src = JSON.parse(request.response).url;};
                } else {                                                                //funfact its actually not possible to receive anything but 201!! I know this because I wrote the server!!
                    alert("Image failed to send to server. Status: " + request.status); //thats a blatant lie you can receive a 415, i know this because i wrote the server!!!!
                }
            }
        };

        request.onerror = function() {
        // request failed
            alert("Image failed to send to server. No more information available.");
        };

        if (sourceForm != undefined) {
			let fd = new FormData(sourceForm); // create FormData using values from a <form> identified by sourceForm
			console.log(fd);
			request.send(fd);
        } else {
            let fd = new FormData();
            fd.append("biography", document.getElementById("bio-modifier").value);
            request.send(fd);
        }
        if (endpoint == "avatar") {
            toggleAvatarForm();
        }
    }

	function toggleAvatarForm() {
		let p = document.getElementById("pfp-form-container");
		if (p.style.display === "none") {
			p.style.display = "block";
		} else {
			p.style.display = "none";
		}
	}

	function toggleBioModifier() {
        let bm = document.getElementById("bio-modifier");
        let bio = document.getElementById("bio-text");
        let disp = bio.style.display;
        if (disp === "none") {
            bio.style.display = "inline-block";
            bm.style.display = "none";
        } else {
            bio.style.display = "none";
            bm.style.display = "inline-block";
            bm.focus();
        }
    }

    function updateBio() { //validate and then POST if necessary (dont need to send a post if theres no change!)
        let bm = document.getElementById("bio-modifier");
        let bio = document.getElementById("bio-text");
        if (bio.textContent != bm.value) {
            console.log("HM!");
            formSubmit(undefined, "bio");
            bio.textContent = bm.value;
        }

        toggleBioModifier();
    }

	let pfp = document.getElementById("pfp");
	let pfpformc = document.getElementById("pfp-form-container");
	let pfpform = document.getElementById("pfp-form");

	pfpform.addEventListener("submit", (event) => {
		event.preventDefault();
		formSubmit(event.target, "avatar");
	});

	let deleteDialog = document.getElementById("delete-dialog");

	deleteDialog.addEventListener("close", (e) => {
		if (deleteDialog.returnValue === "confirm") {
			let dgi = document.getElementById("delete-gallery-id");
			dgi.value = currentGal.Id;
			formSubmit(deleteDialog.children[0], "deleteGal");
		}
	})
{{end}}

let currentGal = undefined;
let currentSlide = 0;
function toggleModal(gallery) {
	let lbox = document.getElementById("lbox");
	currentGal = gallery;
	if (gallery === undefined) {
		lbox.style.display = "none";
	} else {
		lbox.style.display = "block";
		let navs = document.getElementById("navigation-controls");
		if (gallery.Photos.length == 1) {
			navs.style.display = "none";
		} else {
			navs.style.display = "flex";
		}
		let desc = document.getElementById("gallery-description");
		let upload = document.getElementById("gallery-upload-stamp");
		desc.innerHTML = gallery.Description;
		upload.innerHTML = gallery.Uploaded;
		currentSlide = 0;
		changeSlide(currentSlide);
	}
}

function changeSlide(n) {
	let maxSlides = currentGal.Photos.length;
	console.log(currentSlide, currentSlide+n);
	if (currentSlide+n <= maxSlides-1 && currentSlide+n >= 0) {
		currentSlide = currentSlide + n;
		let pc = document.getElementById("photo");
		let photo = currentGal.Photos[currentSlide];
		pc.src = photo.Reference;
		let exif = document.getElementById("img-exif");
		while (exif.firstChild) {
			exif.removeChild(exif.firstChild);
		}
		for (key in photo.Exif) {
			let row = exif.insertRow();
			let c1 = row.insertCell(key);
			let c2 = row.insertCell();
			c1.innerHTML = key;
			c2.innerHTML = photo.Exif[key];
		}
	}
}

window.onclick = function(event) {
	let cname = event.target.className;
	let id = event.target.id;
	console.log(cname, id);
	if (cname == "lbox" && id != "pfp-form-container") {
		event.preventDefault();
		let n = id.match(/lbox-(\d+)/)[1];
		toggleModal(n);
	}
	{{if $SU}}
	if (id == "pfp" || id == "pfp-form-container" || id == "pfp-form") {
		toggleAvatarForm();
	}
	if (id == "deleteGallery") {
		deleteDialog.showModal();
	}
	{{end}}
}
</script>
<script>
	macy = Macy({
		container: "#macy-container",
		trueOrder: true,
		waitForImages: true,
		columns: 3,
		margin: {
			x: 0,
			y: 20,
		},
	})
</script>
{{end}}
